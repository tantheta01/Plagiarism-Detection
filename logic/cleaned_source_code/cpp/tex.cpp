#include "tex.h"GLuint Texture::loadBMP_custom(const char * imagepath){// Data read from the header of the BMP fileunsigned char header[54]; // Each BMP file begins by a 54-bytes headerunsigned int dataPos;     // Position in the file where the actual data beginsunsigned int width, height;unsigned int imageSize;   // = width*height*3// Actual RGB dataunsigned char * data;// Open the fileFILE *  fopen(imagepath,"rb");if (!file){printf("Image could not be opened\n");return 0;if ( fread(header, 1, 54, file)!=54 ){ // If not 54 bytes read : problemprintf("Not a correct BMP file\n");return false;if ( header[0]!='B' || header[1]!='M' ){printf("Not a correct BMP file\n");return 0;// Read ints from the byte array*(int*)&(header[0x0A]);*(int*)&(header[0x22]);*(int*)&(header[0x12]);*(int*)&(header[0x16]);// Some BMP files are misformatted, guess missing informationif (=0)    width*height*3; // 3 : one byte for each Red, Green and Blue componentif (=0)      54; // The BMP header is done that way// Create a buffernew unsigned char [imageSize];// Read the actual data from the file into the bufferfread(data,1,imageSize,file);//Everything is in memory now, the file can be closedfclose(file);// Create one OpenGL textureGLuint textureID;glGenTextures(1, &textureID);// "Bind" the newly created texture : all future texture functions will modify this textureglBindTexture(GL_TEXTURE_2D, textureID);// Give the image to OpenGLglTexImage2D(GL_TEXTURE_2D, 0,GL_RGB, width, height, 0, GL_BGR, GL_UNSIGNED_BYTE, data);glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);return textureID;