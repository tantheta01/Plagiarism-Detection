#include "gl_framework.hpp"#include "shader_util.hpp"float points[] = {0.0f,  0.5f,  0.0f,0.5f, -0.5f,  0.0f,-0.5f, -0.5f,  0.0fvoid renderGL(void)glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);glColor4f(0.5, 0.0, 0.5, 1.0);glBegin(GL_TRIANGLES);glVertex3f(0.0f,  0.5f,  0.0f);glVertex3f(0.5f, -0.5f,  0.0f);glVertex3f(-0.5f, -0.5f,  0.0f);glEnd();int main(int argc, char** argv)//! The pointer to the GLFW windowGLFWwindow* window;//! Setting up the GLFW Error callbackglfwSetErrorCallback(csX75::error_callback);//! Initialize GLFWif (!glfwInit())return -1;//! Create a windowed mode window and its OpenGL contextglfwCreateWindow(640, 480, "CS475/CS675 OpenGL Framework", NULL, NULL);if (!window)glfwTerminate();return -1;//! Make the window's context currentglfwMakeContextCurrent(window);//Initialize GLEWGLenum  glewInit();if (GLEW_OK != err)//Problem: glewInit failed, something is seriously wrong.std::cerr<<"GLEW Init Failed : %s"<<std::endl;//Print and see what context got enabledstd::cout<<"Vendor: "<<glGetString (GL_VENDOR)<<std::endl;std::cout<<"Renderer: "<<glGetString (GL_RENDERER)<<std::endl;std::cout<<"Version: "<<glGetString (GL_VERSION)<<std::endl;std::cout<<"GLSL Version: "<<glGetString (GL_SHADING_LANGUAGE_VERSION)<<std::endl;//Keyboard CallbackglfwSetKeyCallback(window, csX75::key_callback);//Framebuffer resize callbackglfwSetFramebufferSizeCallback(window, csX75::framebuffer_size_callback);// Ensure we can capture the escape key being pressed belowglfwSetInputMode(window, GLFW_STICKY_KEYS, GL_TRUE);//Initialize GL statecsX75::initGL();// Loop until the user closes the windowwhile (glfwWindowShouldClose(window) == 0)// Render hererenderGL();// Swap front and back buffersglfwSwapBuffers(window);// Poll for and process eventsglfwPollEvents();glfwTerminate();return 0;