#include "hierarchy_node.hpp"#include <iostream>extern GLuint vPosition,vColor,uModelViewMatrix;extern std::vector<glm::mat4> matrixStack;namespace csX75HNode::HNode(HNode* a_parent, GLuint num_v, glm::vec4* a_vertices, glm::vec4* a_colours, std::size_t v_size, std::size_t c_size){num_v;v_size;c_size;// initialize vao and vbo of the object;//Ask GL for a Vertex Attribute Objects (vao)glGenVertexArrays (1, &vao);//Ask GL for aVertex Buffer Object (vbo)glGenBuffers (1, &vbo);//bind themglBindVertexArray (vao);glBindBuffer (GL_ARRAY_BUFFER, vbo);glBufferData (GL_ARRAY_BUFFER, vertex_buffer_size + color_buffer_size, NULL, GL_STATIC_DRAW);glBufferSubData( GL_ARRAY_BUFFER, 0, vertex_buffer_size, a_vertices );glBufferSubData( GL_ARRAY_BUFFER, vertex_buffer_size, color_buffer_size, a_colours );//setup the vertex array as per the shaderglEnableVertexAttribArray( vPosition );glVertexAttribPointer( vPosition, 4, GL_FLOAT, GL_FALSE, 0, BUFFER_OFFSET(0) );glEnableVertexAttribArray( vColor );glVertexAttribPointer( vColor, 4, GL_FLOAT, GL_FALSE, 0, BUFFER_OFFSET(vertex_buffer_size));// set parentif(= NULL){NULL;else{a_parent;parent->add_child(this);//initial parameters are set to 0;update_matrices();void HNode::update_matrices(){glm::rotate(glm::mat4(1.0f), glm::radians(rx), glm::vec3(1.0f,0.0f,0.0f));glm::rotate(rotation, glm::radians(ry), glm::vec3(0.0f,1.0f,0.0f));glm::rotate(rotation, glm::radians(rz), glm::vec3(0.0f,0.0f,1.0f));glm::translate(glm::mat4(1.0f),glm::vec3(tx,ty,tz));void HNode::add_child(HNode* a_child){children.push_back(a_child);void HNode::change_parameters(GLfloat atx, GLfloat aty, GLfloat atz, GLfloat arx, GLfloat ary, GLfloat arz){atx;aty;atz;arx;ary;arz;update_matrices();void HNode::render(){//matrixStack multiplyglm::mat4*  multiply_stack(matrixStack);glUniformMatrix4fv(uModelViewMatrix, 1, GL_FALSE, glm::value_ptr(*ms_mult));glBindVertexArray (vao);glDrawArrays(GL_TRIANGLES, 0, num_vertices);// for memorydelete ms_mult;void HNode::render_tree(){matrixStack.push_back(translation);matrixStack.push_back(rotation);render();for(int 0;i<children.size();i++){children[i]->render_tree();matrixStack.pop_back();matrixStack.pop_back();void HNode::inc_rx(){rx++;update_matrices();void HNode::inc_ry(){ry++;update_matrices();void HNode::inc_rz(){rz++;update_matrices();void HNode::dec_rx(){rx--;update_matrices();void HNode::dec_ry(){ry--;update_matrices();void HNode::dec_rz(){rz--;update_matrices();glm::mat4* multiply_stack(std::vector<glm::mat4> matStack){glm::mat4* mult;new glm::mat4(1.0f);for(int 0;i<matStack.size();i++){* (*mult) * matStack[i];return mult;